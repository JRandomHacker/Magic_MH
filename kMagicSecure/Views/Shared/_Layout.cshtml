<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewBag.Title - kMagic Scores</title>
	@Styles.Render("~/Content/css")
	@Scripts.Render("~/bundles/modernizr")
</head>
<body>
	@{
		try
		{
			Exception lastError = (Exception)Session["LastError"];
			if (lastError != null)
			{
				<div class="errorTitle">ERROR: @lastError.Message</div>
				Session["LastError"] = null;
			}
		}
		catch (Exception ex)
		{
			<div class="errorTitle">ERROR: Unknown Error.</div>
			Session["LastError"] = null;
		}
	}



	<div class="navbar navbar-inverse navbar-fixed-top">
		<div class="container">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				@Html.ActionLink("Magic", "Index", new { controller = "Magic", action = "Default" }, new { @class = "navbar-brand" })
			</div>
			<div class="navbar-collapse collapse">
				<ul class="nav navbar-nav">
					@try
					{
						foreach (Magic.Domain.dbEvent e in ViewBag.CurrentEvents)
						{
							<li class="dropdown">
								<a href="#" data-toggle="dropdown" class="dropdown-toggle">@e.Name<b class="caret"></b></a>
								<ul class="dropdown-menu">
									<li>@Html.ActionLink(e.Name + "(1)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 1 })</li>
									<li>@Html.ActionLink(e.Name + "(2)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 2 })</li>
									<li>@Html.ActionLink(e.Name + "(3)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 3 })</li>
									<li>@Html.ActionLink(e.Name + "(*)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 0 })</li>
									<li>@Html.ActionLink(e.Name + "(Top 8)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 4 })</li>
								</ul>
							</li>
						}
					}
					catch
					{
						var e = new Magic.Domain.dbEvent()
						{
							Name = "RNA"
						};
						<li class="dropdown">
							<a href="#" data-toggle="dropdown" class="dropdown-toggle">@e.Name<b class="caret"></b></a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink(e.Name + "(1)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 1 })</li>
								<li>@Html.ActionLink(e.Name + "(2)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 2 })</li>
								<li>@Html.ActionLink(e.Name + "(3)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 3 })</li>
								<li>@Html.ActionLink(e.Name + "(*)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 0 })</li>
								<li>@Html.ActionLink(e.Name + "(Top 8)", "Index", new { controller = "Magic", action = "Index", eventName = e.Name, round = 4 })</li>
							</ul>
						</li>
					}

					<li class="dropdown">
						<a href="#" data-toggle="dropdown" class="dropdown-toggle">XLN<b class="caret"></b></a>
						<ul class="dropdown-menu">
							<li>@Html.ActionLink("XLN(1)", "Index", new { controller = "Magic", action = "Index", eventName = "XLN", round = 1 })</li>
							<li>@Html.ActionLink("XLN(2)", "Index", new { controller = "Magic", action = "Index", eventName = "XLN", round = 2 })</li>
							<li>@Html.ActionLink("XLN(3)", "Index", new { controller = "Magic", action = "Index", eventName = "XLN", round = 3 })</li>
							<li>@Html.ActionLink("XLN(*)", "Index", new { controller = "Magic", action = "Index", eventName = "XLN", round = 0 })</li>
							<li>@Html.ActionLink("XLN(Top 8)", "Index", new { controller = "Magic", action = "Index", eventName = "XLN", round = 4 })</li>
						</ul>
					</li>
					<li class="dropdown">
						<a href="#" data-toggle="dropdown" class="dropdown-toggle">RIX<b class="caret"></b></a>
						<ul class="dropdown-menu">
							<li>@Html.ActionLink("RIX(1)", "Index", new { controller = "Magic", action = "Index", eventName = "RIX", round = 1 })</li>
							<li>@Html.ActionLink("RIX(2)", "Index", new { controller = "Magic", action = "Index", eventName = "RIX", round = 2 })</li>
							<li>@Html.ActionLink("RIX(3)", "Index", new { controller = "Magic", action = "Index", eventName = "RIX", round = 3 })</li>
							<li>@Html.ActionLink("RIX(*)", "Index", new { controller = "Magic", action = "Index", eventName = "RIX", round = 0 })</li>
							<li>@Html.ActionLink("RIX(Top 8)", "Index", new { controller = "Magic", action = "Index", eventName = "RIX", round = 4 })</li>
						</ul>
					</li>
					<li class="dropdown">
						<a href="#" data-toggle="dropdown" class="dropdown-toggle">UST<b class="caret"></b></a>
						<ul class="dropdown-menu">
							<li>@Html.ActionLink("UST(1)", "Index", new { controller = "Magic", action = "Index", eventName = "UST", round = 1 })</li>
							<li>@Html.ActionLink("UST(2)", "Index", new { controller = "Magic", action = "Index", eventName = "UST", round = 2 })</li>
							<li>@Html.ActionLink("UST(3)", "Index", new { controller = "Magic", action = "Index", eventName = "UST", round = 3 })</li>
							<li>@Html.ActionLink("UST(*)", "Index", new { controller = "Magic", action = "Index", eventName = "UST", round = 0 })</li>
							<li>@Html.ActionLink("UST(Top 8)", "Index", new { controller = "Magic", action = "Index", eventName = "UST", round = 4 })</li>
						</ul>
					</li>

				</ul>
				@Html.Partial("_loginPartial")
			</div>
		</div>
	</div>
	<div class="container body-content">
		@RenderBody()
		<hr />
		<footer>
			<p>&copy; 2015-2016 - MHill kMagic Manager</p>
		</footer>
	</div>

	@{
		//Scripts.Render("~/bundles/jquery")
	}

	@Scripts.Render("~/bundles/jquerybootstrapandui")
	@RenderSection("scripts", required: false)
</body>
</html>
